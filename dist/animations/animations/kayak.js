import{o as N,i as u,E as j,s as A,p as S,e as R,G as M,B as x,H as E,I as F,J as I,v as V,x as J,K as O,y as q,t as $,z as b,O as G,M as v,m as H,j as r,N as K,R as _,F as Q,D as m,V as U,b as X,c as Y}from"./makeScene2D.js";import{a as w,p as Z,g as ss,b as es}from"./createCurveProfileLerp.js";import{P as z}from"./Polygon.js";import{C as ns}from"./Circle.js";import{c as ts}from"./chain.js";import"./ArcSegment.js";var d=globalThis&&globalThis.__decorate||function(p,s,n,e){var i=arguments.length,a=i<3?s:e===null?e=Object.getOwnPropertyDescriptor(s,n):e,t;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")a=Reflect.decorate(p,s,n,e);else for(var l=p.length-1;l>=0;l--)(t=p[l])&&(a=(i<3?t(a):i>3?t(s,n,a):t(s,n))||a);return i>3&&a&&Object.defineProperty(s,n,a),a},y;let o=y=class extends N{static rotatePoints(s,n,e){if(e){let i=1/0,a=0;for(let t=0;t<s.length;t+=1){const l=w(s,n,t);l<i&&(i=l,a=t)}if(a){const t=s.splice(0,a);s.splice(s.length,0,...t)}}else{const i=w(s,n,0),a=[...s].reverse();w(a,n,0)<i&&s.reverse()}}static distributePoints(s,n){if(s.length===0){for(let l=0;l<n;l++)s.push(u.zero);return}if(s.length===1){const l=s[0];for(let c=0;c<n;c++)s.push(l);return}const e=s.length+n,i=Z(s);let a=n/i,t=0;for(;s.length<e;){const l=e-s.length;if(t+1>=s.length){a=l/i,t=0;continue}const c=s[t],g=s[t+1],T=c.sub(g).magnitude,D=Math.min(Math.round(T*a),l)+1;for(let k=1;k<D;k++)s.splice(++t,0,u.lerp(c,g,k/D));t++}}*tweenPoints(s,n,e){const i=[...this.parsedPoints()],a=this.parsePoints(j(s)),t=this.closed(),l=i.length-a.length;y.distributePoints(l<0?i:a,Math.abs(l)),y.rotatePoints(a,i,t),this.tweenedPoints(i),yield*A(n,c=>{const g=e(c);this.tweenedPoints(es(i,a,g))},()=>{this.tweenedPoints(null),this.points(s)})}constructor(s){super(s),this.tweenedPoints=S(null),s.children===void 0&&s.points===void 0&&R().warn({message:"No points specified for the line",remarks:`<p>The line won&#39;t be visible unless you specify at least two points:</p>
<pre><code class="language-tsx">&lt;<span class="hljs-title class_">Line</span>
  stroke=<span class="hljs-string">&quot;#fff&quot;</span>
  lineWidth={<span class="hljs-number">8</span>}
  points={[
    [<span class="hljs-number">100</span>, <span class="hljs-number">0</span>],
    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>],
    [<span class="hljs-number">0</span>, <span class="hljs-number">100</span>],
  ]}
/&gt;
</code></pre><p>Alternatively, you can define the points using the children:</p>
<pre><code class="language-tsx">&lt;<span class="hljs-title class_">Line</span> stroke=<span class="hljs-string">&quot;#fff&quot;</span> lineWidth={<span class="hljs-number">8</span>}&gt;
  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Node</span> <span class="hljs-attr">x</span>=<span class="hljs-string">{100}</span> /&gt;</span></span>
  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Node</span> /&gt;</span></span>
  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Node</span> <span class="hljs-attr">y</span>=<span class="hljs-string">{100}</span> /&gt;</span></span>
&lt;/<span class="hljs-title class_">Line</span>&gt;
</code></pre><p>If you did this intentionally, and want to disable this message, set the
<code>points</code> property to <code>null</code>:</p>
<pre><code class="language-tsx">&lt;<span class="hljs-title class_">Line</span> stroke=<span class="hljs-string">&quot;#fff&quot;</span> lineWidth={<span class="hljs-number">8</span>} points={<span class="hljs-literal">null</span>} /&gt;
</code></pre>`,inspect:this.key})}childrenBBox(){let s=this.tweenedPoints();if(!s){const n=this.points();s=n?n.map(e=>new u(j(e))):this.children().filter(e=>!(e instanceof M)||e.isLayoutRoot()).map(e=>e.position())}return x.fromPoints(...s)}parsedPoints(){return this.parsePoints(this.points())}profile(){return ss(this.tweenedPoints()??this.parsedPoints(),this.radius(),this.closed())}lineWidthCoefficient(){const s=this.radius(),n=this.lineJoin();let e=super.lineWidthCoefficient();if(s===0&&n==="miter"){const{minSin:i}=this.profile();i>0&&(e=Math.max(e,.5/i))}return e}drawOverlay(s,n){const e=this.childrenBBox().transformCorners(n),a=this.computedSize().mul(this.offset()).scale(.5).transformAsPoint(n);s.fillStyle="white",s.strokeStyle="black",s.lineWidth=1;const t=new Path2D,l=(this.tweenedPoints()??this.parsedPoints()).map(c=>c.transformAsPoint(n));if(l.length>0){E(t,l[0]);for(const c of l)F(t,c),s.beginPath(),I(s,c,4),s.closePath(),s.fill(),s.stroke()}s.strokeStyle="white",s.stroke(t),s.beginPath(),V(s,a),s.stroke(),s.beginPath(),J(s,e),s.closePath(),s.stroke()}parsePoints(s){return s?s.map(n=>new u(j(n))):this.children().map(n=>n.position())}};d([O(0),q()],o.prototype,"radius",void 0);d([O(null),q()],o.prototype,"points",void 0);d([$()],o.prototype,"tweenPoints",null);d([b()],o.prototype,"childrenBBox",null);d([b()],o.prototype,"parsedPoints",null);d([b()],o.prototype,"profile",null);o=y=d([G("Line")],o);let W;W??(W=new v("kayak",!1));W.loadData({version:0,shared:{background:null,range:[0,null],size:{x:1920,y:1080},audioOffset:0},preview:{fps:30,resolutionScale:1},rendering:{fps:60,resolutionScale:1,colorSpace:"srgb",exporter:{name:"@motion-canvas/core/image-sequence",options:{fileType:"image/png",quality:100,groupByScene:!1}}}});const as=W;let L;L??(L=new v("kayak",!1));L.loadData({version:1,timeEvents:[],seed:1747744856});const is=L,P=[[6.6,4.6],[8,6],[3,1],[1.3,-.5],[5,3],[6,4],[7.3,3.7],[7,3],[3.7,1.7],[5,1.6],[5.6,2.3],[7,0],[6,3],[4.7,.7],[6.3,2.65],[4,0]],ls=[[2.7,3.7],[1.5,5],[6.5,.5],[7,-.5],[4.8,2],[3.6,3.2],[5,2.5],[6,2.5],[5.6,1.3],[7.5,1.5],[7,2.6],[7,0],[6.2,3.1],[4.7,.7],[6.5,2.55],[4,0]],os=[[6.5,.5],[7,-.7],[2.7,3.7],[1.5,5],[4.8,4.8],[5.6,1.3],[7.5,1.5],[7,2.6],[3.6,3.2],[5,2.5],[6,2.5],[7,0],[6.2,3.1],[4.7,.7],[6.5,2.55],[4,0]],rs=[[3,1],[1.3,-.7],[6.6,4.6],[8,6],[5,3],[3.7,1.7],[5,1.6],[5.6,2.3],[6,4],[7.3,3.7],[7,3],[7,0],[6,3],[4.7,.7],[6.3,2.65],[4,0]],cs=P,B=30;cs.map(p=>[(p[0]-5)*B,-p[1]*B]);function f(p,s){return p.map(e=>[(e[0]-5)*s,-e[1]*s]).map(e=>new u(e[0],e[1]))}f(P,30);const h=H(function*(p){R();const s=S(f(P,30)),n="#1E514B",e="#C4D5E7",i="#0D57DD";p.add(r(Q,{children:[r(z,{position:[0,0],sides:6,size:650,fill:"#88a",stroke:"#00f",lineWidth:15,clip:!0,margin:20,scale:1.5,children:r(K,{x:-10,y:129,scale:[-1.9,1.9],children:[r(_,{x:-5,y:-150,size:[290,300],fill:e}),r(_,{x:-5,y:50,size:[290,100],fill:n}),r(o,{points:()=>[s()[0],s()[2]],lineWidth:2,stroke:"#000"}),r(o,{points:()=>[s()[2],s()[3]],lineWidth:4,stroke:"#222"}),r(o,{points:()=>[s()[8],s()[9]],lineWidth:3,stroke:"#ccc"}),r(o,{points:()=>[s()[9],s()[10]],lineWidth:5,stroke:"#ccc",radius:5}),r(ns,{position:()=>s()[12],size:24,fill:"#fff"}),r(o,{points:[()=>s()[7],()=>s()[10],()=>s()[11],()=>s()[7]],stroke:e,radius:5,lineWidth:5,fill:e}),r(o,{points:()=>[s()[11],s()[14]],lineWidth:6,stroke:"#fff",endOffset:5}),r(o,{points:()=>[s()[5],s()[6]],lineWidth:4,stroke:"#eee"}),r(o,{points:()=>[s()[6],s()[7]],lineWidth:6,stroke:"#eee"}),r(o,{points:[()=>s()[11],s()[13],()=>s()[13],s()[15]],lineWidth:6,stroke:"#fff"}),r(o,{points:()=>[[-150,5],[140,5]],lineWidth:20,stroke:i}),"3",r(o,{points:()=>[s()[0],s()[1]],lineWidth:4,stroke:"#222"}),"Rec"]})}),r(z,{position:[0,0],sides:6,size:650,stroke:i,lineWidth:15,scale:1.5})]}));const a=.5,t=1;yield*ts(s(f(ls,30),t,m),s(f(rs,30),a,m),s(f(os,30),t,m),s(f(P,30),a,m))});h.name="kayak";is.attach(h.meta);h.onReplaced??(h.onReplaced=new U(h.config));const ps=X({scenes:[h]}),C=new v("settings","\0settings");C.loadData({version:1,appearance:{color:"rgb(51,166,255)",font:!1,coordinates:!0},defaults:{background:null,size:{x:1920,y:1080}}});const Ps=Y("kayak",{core:"3.13.0",two:"3.13.0",ui:"3.13.0",vitePlugin:"3.13.0"},[],ps,as,C);export{Ps as default};
